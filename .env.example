# =================================================================
# Nexus Commerce - Environment Variables Example
# =================================================================
# Copy this file to .env and update with your actual values
# This file contains all possible environment variables used across
# dev, stage, and prod environments

# =================================================================
# AWS CONFIGURATION
# =================================================================
AWS_REGION=us-west-2
AWS_PROFILE=default
AWS_ACCOUNT_ID=123456789012

# AWS Credentials (alternative to profile)
# AWS_ACCESS_KEY_ID=your-access-key
# AWS_SECRET_ACCESS_KEY=your-secret-key

# =================================================================
# PROJECT CONFIGURATION
# =================================================================
PROJECT_NAME=nexus-commerce
OWNER="Platform Team"
COST_CENTER=Engineering

# =================================================================
# TERRAFORM BACKEND CONFIGURATION
# =================================================================
# S3 Backend Configuration (per environment)
TF_BACKEND_BUCKET_DEV=nexus-commerce-terraform-state-dev
TF_BACKEND_BUCKET_STAGE=nexus-commerce-terraform-state-stage
TF_BACKEND_BUCKET_PROD=nexus-commerce-terraform-state-prod

# DynamoDB Tables for state locking
TF_DYNAMODB_TABLE_DEV=nexus-commerce-terraform-locks-dev
TF_DYNAMODB_TABLE_STAGE=nexus-commerce-terraform-locks-stage
TF_DYNAMODB_TABLE_PROD=nexus-commerce-terraform-locks-prod

# =================================================================
# KUBERNETES CONFIGURATION
# =================================================================
KUBERNETES_VERSION=1.28

# =================================================================
# GITOPS CONFIGURATION
# =================================================================
GITOPS_REPO_URL=https://github.com/ZakariaRek/gitops-repo_ArgoCD
GITOPS_REPO_BRANCH_DEV=develop
GITOPS_REPO_BRANCH_STAGE=release
GITOPS_REPO_BRANCH_PROD=main
GITOPS_REPO_PATH=argocd/applications

# ArgoCD Configuration
ARGOCD_VERSION=5.46.8
BOOTSTRAP_ARGOCD=true
AUTO_SYNC_PRUNE_DEV=true
AUTO_SYNC_PRUNE_STAGE=true
AUTO_SYNC_PRUNE_PROD=false
AUTO_SYNC_SELF_HEAL_DEV=true
AUTO_SYNC_SELF_HEAL_STAGE=true
AUTO_SYNC_SELF_HEAL_PROD=false
USE_CUSTOM_PROJECT=true

# =================================================================
# DOMAIN AND DNS CONFIGURATION
# =================================================================
# Production domain
DOMAIN_NAME_PROD=nexus-commerce.com
# Staging domain (optional)
DOMAIN_NAME_STAGE=staging.nexus-commerce.com
# Dev domain (optional, usually empty)
DOMAIN_NAME_DEV=""

# External DNS
ENABLE_EXTERNAL_DNS_DEV=false
ENABLE_EXTERNAL_DNS_STAGE=false
ENABLE_EXTERNAL_DNS_PROD=true

# =================================================================
# MONITORING CONFIGURATION
# =================================================================
ENABLE_MONITORING_DEV=false
ENABLE_MONITORING_STAGE=true
ENABLE_MONITORING_PROD=true

# Grafana Admin Password (use strong passwords)
GRAFANA_ADMIN_PASSWORD_DEV=admin123
GRAFANA_ADMIN_PASSWORD_STAGE=StrongPassword123!
GRAFANA_ADMIN_PASSWORD_PROD=VeryStrongPassword456!

# Grafana OAuth (optional)
ENABLE_GRAFANA_OAUTH=false
GRAFANA_OAUTH_CLIENT_ID=your-oauth-client-id
GRAFANA_OAUTH_CLIENT_SECRET=your-oauth-client-secret
GRAFANA_ALLOWED_DOMAINS=yourdomain.com

# =================================================================
# ALERTING CONFIGURATION
# =================================================================
# Email Alerts
ENABLE_EMAIL_ALERTS=true
SMTP_SMARTHOST=smtp.gmail.com:587
SMTP_FROM=alerts@nexus-commerce.com
ALERT_EMAIL_TO=ops-team@nexus-commerce.com

# Slack Alerts
ENABLE_SLACK_ALERTS=true
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK
SLACK_CHANNEL="#infrastructure"

# =================================================================
# NODE GROUP CONFIGURATION (DEVELOPMENT)
# =================================================================
# System Node Group - Dev
DEV_SYSTEM_INSTANCE_TYPES=["t3.medium"]
DEV_SYSTEM_MIN_SIZE=1
DEV_SYSTEM_MAX_SIZE=3
DEV_SYSTEM_DESIRED_SIZE=1
DEV_SYSTEM_DISK_SIZE=30
DEV_SYSTEM_CAPACITY_TYPE=ON_DEMAND

# Application Node Group - Dev
DEV_APP_INSTANCE_TYPES=["t3.large"]
DEV_APP_MIN_SIZE=1
DEV_APP_MAX_SIZE=5
DEV_APP_DESIRED_SIZE=2
DEV_APP_DISK_SIZE=50
DEV_APP_CAPACITY_TYPE=SPOT

# Data Node Group - Dev
DEV_DATA_INSTANCE_TYPES=["r5.large"]
DEV_DATA_MIN_SIZE=0
DEV_DATA_MAX_SIZE=3
DEV_DATA_DESIRED_SIZE=1
DEV_DATA_DISK_SIZE=100
DEV_DATA_CAPACITY_TYPE=SPOT

# =================================================================
# NODE GROUP CONFIGURATION (STAGING)
# =================================================================
# System Node Group - Stage
STAGE_SYSTEM_INSTANCE_TYPES=["t3.large"]
STAGE_SYSTEM_MIN_SIZE=2
STAGE_SYSTEM_MAX_SIZE=5
STAGE_SYSTEM_DESIRED_SIZE=2
STAGE_SYSTEM_DISK_SIZE=50
STAGE_SYSTEM_CAPACITY_TYPE=ON_DEMAND

# Application Node Group - Stage
STAGE_APP_INSTANCE_TYPES=["t3.xlarge","t3.2xlarge"]
STAGE_APP_MIN_SIZE=2
STAGE_APP_MAX_SIZE=8
STAGE_APP_DESIRED_SIZE=3
STAGE_APP_DISK_SIZE=80
STAGE_APP_CAPACITY_TYPE=ON_DEMAND

# Data Node Group - Stage
STAGE_DATA_INSTANCE_TYPES=["r5.xlarge"]
STAGE_DATA_MIN_SIZE=1
STAGE_DATA_MAX_SIZE=4
STAGE_DATA_DESIRED_SIZE=2
STAGE_DATA_DISK_SIZE=150
STAGE_DATA_CAPACITY_TYPE=ON_DEMAND

# =================================================================
# NODE GROUP CONFIGURATION (PRODUCTION)
# =================================================================
# System Node Group - Prod
PROD_SYSTEM_INSTANCE_TYPES=["t3.xlarge"]
PROD_SYSTEM_MIN_SIZE=3
PROD_SYSTEM_MAX_SIZE=6
PROD_SYSTEM_DESIRED_SIZE=3
PROD_SYSTEM_DISK_SIZE=100
PROD_SYSTEM_CAPACITY_TYPE=ON_DEMAND

# Application Node Group - Prod
PROD_APP_INSTANCE_TYPES=["t3.2xlarge","c5.2xlarge"]
PROD_APP_MIN_SIZE=3
PROD_APP_MAX_SIZE=15
PROD_APP_DESIRED_SIZE=5
PROD_APP_DISK_SIZE=100
PROD_APP_CAPACITY_TYPE=ON_DEMAND

# Data Node Group - Prod
PROD_DATA_INSTANCE_TYPES=["r5.2xlarge","r5.4xlarge"]
PROD_DATA_MIN_SIZE=2
PROD_DATA_MAX_SIZE=8
PROD_DATA_DESIRED_SIZE=3
PROD_DATA_DISK_SIZE=500
PROD_DATA_CAPACITY_TYPE=ON_DEMAND

# Compute Node Group - Prod (Optional)
PROD_COMPUTE_INSTANCE_TYPES=["c5.4xlarge","c5.8xlarge"]
PROD_COMPUTE_MIN_SIZE=0
PROD_COMPUTE_MAX_SIZE=10
PROD_COMPUTE_DESIRED_SIZE=0
PROD_COMPUTE_DISK_SIZE=100
PROD_COMPUTE_CAPACITY_TYPE=SPOT

# =================================================================
# NETWORK CONFIGURATION
# =================================================================
# Development
DEV_VPC_CIDR=10.0.0.0/16
DEV_PRIVATE_SUBNETS=["10.0.1.0/24","10.0.2.0/24","10.0.3.0/24"]
DEV_PUBLIC_SUBNETS=["10.0.101.0/24","10.0.102.0/24","10.0.103.0/24"]
DEV_NUMBER_OF_AZS=2

# Staging
STAGE_VPC_CIDR=10.1.0.0/16
STAGE_PRIVATE_SUBNETS=["10.1.1.0/24","10.1.2.0/24","10.1.3.0/24"]
STAGE_PUBLIC_SUBNETS=["10.1.101.0/24","10.1.102.0/24","10.1.103.0/24"]
STAGE_NUMBER_OF_AZS=3

# Production
PROD_VPC_CIDR=10.2.0.0/16
PROD_PRIVATE_SUBNETS=["10.2.1.0/24","10.2.2.0/24","10.2.3.0/24"]
PROD_PUBLIC_SUBNETS=["10.2.101.0/24","10.2.102.0/24","10.2.103.0/24"]
PROD_NUMBER_OF_AZS=3

# =================================================================
# EKS ADDON VERSIONS
# =================================================================
ADDON_VPC_CNI_VERSION=v1.15.1-eksbuild.1
ADDON_COREDNS_VERSION=v1.10.1-eksbuild.5
ADDON_KUBE_PROXY_VERSION=v1.28.2-eksbuild.2
ADDON_EBS_CSI_VERSION=v1.24.0-eksbuild.1

# =================================================================
# IAM USERS AND ROLES (OPTIONAL)
# =================================================================
# EKS Admin Users (ARNs)
# EKS_ADMIN_USER_1_ARN=arn:aws:iam::123456789012:user/admin-user-1
# EKS_ADMIN_USER_1_NAME=admin-user-1
# EKS_ADMIN_USER_2_ARN=arn:aws:iam::123456789012:user/admin-user-2
# EKS_ADMIN_USER_2_NAME=admin-user-2

# EKS Admin Roles (ARNs)
# EKS_ADMIN_ROLE_1_ARN=arn:aws:iam::123456789012:role/EKSAdminRole
# EKS_ADMIN_ROLE_1_NAME=eks-admin-role

# =================================================================
# STORAGE CONFIGURATION
# =================================================================
# Prometheus Storage
PROMETHEUS_STORAGE_SIZE_DEV=20Gi
PROMETHEUS_STORAGE_SIZE_STAGE=50Gi
PROMETHEUS_STORAGE_SIZE_PROD=100Gi
PROMETHEUS_RETENTION_DEV=7d
PROMETHEUS_RETENTION_STAGE=15d
PROMETHEUS_RETENTION_PROD=30d

# Grafana Storage
GRAFANA_STORAGE_SIZE_DEV=5Gi
GRAFANA_STORAGE_SIZE_STAGE=10Gi
GRAFANA_STORAGE_SIZE_PROD=20Gi

# Alertmanager Storage
ALERTMANAGER_STORAGE_SIZE_DEV=5Gi
ALERTMANAGER_STORAGE_SIZE_STAGE=10Gi
ALERTMANAGER_STORAGE_SIZE_PROD=20Gi

# =================================================================
# LOKI CONFIGURATION (OPTIONAL)
# =================================================================
ENABLE_LOKI=false
LOKI_S3_BUCKET=nexus-commerce-loki-logs
LOKI_VERSION=2.9.0
PROMTAIL_VERSION=6.15.0

# =================================================================
# SECURITY CONFIGURATION
# =================================================================
ENABLE_COMPLIANCE_SCANNING=false
ENABLE_POD_SECURITY_POLICY_DEV=false
ENABLE_POD_SECURITY_POLICY_STAGE=true
ENABLE_POD_SECURITY_POLICY_PROD=true
ENABLE_NETWORK_POLICIES_DEV=false
ENABLE_NETWORK_POLICIES_STAGE=false
ENABLE_NETWORK_POLICIES_PROD=true

# =================================================================
# BACKUP CONFIGURATION
# =================================================================
BACKUP_RETENTION_DAYS_DEV=7
BACKUP_RETENTION_DAYS_STAGE=14
BACKUP_RETENTION_DAYS_PROD=30
ENABLE_AUTOMATED_BACKUPS_DEV=false
ENABLE_AUTOMATED_BACKUPS_STAGE=false
ENABLE_AUTOMATED_BACKUPS_PROD=true

# =================================================================
# FEATURE FLAGS
# =================================================================
ENABLE_CLUSTER_AUTOSCALER=true
ENABLE_AWS_LOAD_BALANCER_CONTROLLER=true
ENABLE_METRICS_SERVER=true
ENABLE_CERT_MANAGER_DEV=false
ENABLE_CERT_MANAGER_STAGE=false
ENABLE_CERT_MANAGER_PROD=true
ENABLE_INGRESS_NGINX=false

# =================================================================
# CI/CD CONFIGURATION
# =================================================================
# GitHub Actions (if using)
GITHUB_TOKEN=ghp_your_github_token_here
GITHUB_REPOSITORY=ZakariaRek/gitops-repo_ArgoCD

# Docker Hub (if using)
DOCKER_HUB_USERNAME=your-docker-username
DOCKER_HUB_PASSWORD=your-docker-password

# =================================================================
# DEVELOPMENT TOOLS
# =================================================================
# Terraform version
TF_VERSION=1.5.7

# kubectl version
KUBECTL_VERSION=1.28.0

# Helm version
HELM_VERSION=3.12.0

# =================================================================
# LOCAL DEVELOPMENT
# =================================================================
# Current environment for scripts
CURRENT_ENV=dev

# Local kubectl context
KUBECTL_CONTEXT=dev-nexus-commerce

# Port forwarding defaults
ARGOCD_LOCAL_PORT=8080
GRAFANA_LOCAL_PORT=3000
PROMETHEUS_LOCAL_PORT=9090

# =================================================================
# OPTIONAL INTEGRATIONS
# =================================================================
# Datadog (if using)
# DATADOG_API_KEY=your-datadog-api-key
# DATADOG_APP_KEY=your-datadog-app-key

# New Relic (if using)
# NEW_RELIC_LICENSE_KEY=your-newrelic-license-key

# Splunk (if using)
# SPLUNK_HEC_TOKEN=your-splunk-hec-token
# SPLUNK_HEC_URL=https://your-splunk-instance.com:8088

# =================================================================
# NOTES
# =================================================================
# 1. Copy this file to .env and update with your actual values
# 2. Never commit .env to version control
# 3. Use strong passwords for production environments
# 4. Review and update IAM permissions regularly
# 5. Consider using AWS Secrets Manager or Parameter Store for sensitive values
# 6. Validate all network CIDR blocks don't overlap with existing infrastructure
# 7. Test configurations in dev environment before applying to staging/production